{"ast":null,"code":"var _jsxFileName = \"/Users/conniewong/bootcamp/challenge-assignment-20/react-portfolio/src/components/PortfolioContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport About from \"./pages/About\";\nimport Project from \"./pages/Project\";\nimport Resume from \"./pages/Resume\";\nimport Contact from \"./pages/Contact\";\n// import NavTabs from \"./NavTabs\";\n// import Navigation from \"./Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioContainer = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(\"About\");\n\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    if (currentPage === \"About\") {\n      return /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }, this);\n    }\n    if (currentPage === \"Project\") {\n      return /*#__PURE__*/_jsxDEV(Project, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n    }\n    if (currentPage === \"Contact\") {\n      return /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Resume, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  };\n  const handlePageChange = page => setCurrentPage(page);\n  return (\n    // currentPage={currentPage}\n    // handlePageChange={handlePageChange}\n\n    {\n      renderPage\n    }\n  );\n};\n\n//       {/* We are passing the currentPage from state and the function to update it */}\n//       <NavTabs currentPage={currentPage} handlePageChange={handlePageChange} />\n//       {/* Here we are calling the renderPage method which will return a component  */}\n//       {renderPage()}\n//     </div>\n//   );\n// };\n_s(PortfolioContainer, \"Opv7alb6lNoTE9K5R8Y8uPPReyY=\");\n_c = PortfolioContainer;\nexport default PortfolioContainer;\nvar _c;\n$RefreshReg$(_c, \"PortfolioContainer\");","map":{"version":3,"names":["React","useState","About","Project","Resume","Contact","PortfolioContainer","currentPage","setCurrentPage","renderPage","handlePageChange","page"],"sources":["/Users/conniewong/bootcamp/challenge-assignment-20/react-portfolio/src/components/PortfolioContainer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport About from \"./pages/About\";\nimport Project from \"./pages/Project\";\nimport Resume from \"./pages/Resume\";\nimport Contact from \"./pages/Contact\";\n// import NavTabs from \"./NavTabs\";\n// import Navigation from \"./Navigation\";\n\nconst PortfolioContainer = () => {\n  const [currentPage, setCurrentPage] = useState(\"About\");\n\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    if (currentPage === \"About\") {\n      return <About />;\n    }\n    if (currentPage === \"Project\") {\n      return <Project />;\n    }\n    if (currentPage === \"Contact\") {\n      return <Contact />;\n    }\n    return <Resume />;\n  };\n\n  const handlePageChange = (page) => setCurrentPage(page);\n\n  return (\n    // currentPage={currentPage}\n    // handlePageChange={handlePageChange}\n\n    { renderPage }\n  );\n};\n\n//       {/* We are passing the currentPage from state and the function to update it */}\n//       <NavTabs currentPage={currentPage} handlePageChange={handlePageChange} />\n//       {/* Here we are calling the renderPage method which will return a component  */}\n//       {renderPage()}\n//     </div>\n//   );\n// };\n\nexport default PortfolioContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,OAAO,MAAM,iBAAiB;AACrC;AACA;AAAA;AAEA,MAAMC,kBAAkB,GAAG,MAAM;EAAA;EAC/B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,OAAO,CAAC;;EAEvD;EACA,MAAMQ,UAAU,GAAG,MAAM;IACvB,IAAIF,WAAW,KAAK,OAAO,EAAE;MAC3B,oBAAO,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA,QAAG;IAClB;IACA,IAAIA,WAAW,KAAK,SAAS,EAAE;MAC7B,oBAAO,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG;IACpB;IACA,IAAIA,WAAW,KAAK,SAAS,EAAE;MAC7B,oBAAO,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG;IACpB;IACA,oBAAO,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EACnB,CAAC;EAED,MAAMG,gBAAgB,GAAIC,IAAI,IAAKH,cAAc,CAACG,IAAI,CAAC;EAEvD;IACE;IACA;;IAEA;MAAEF;IAAW;EAAC;AAElB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GAjCMH,kBAAkB;AAAA,KAAlBA,kBAAkB;AAmCxB,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}