{"ast":null,"code":"var _jsxFileName = \"/Users/conniewong/bootcamp/challenge-assignment-20/react-portfolio/src/components/pages/Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  card: {\n    padding: 20\n  }\n};\nfunction ContactForm() {\n  _s();\n  const [firstName, setFirstName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // // when the state changes run this callback\n  // useEffect() => {\n\n  useEffect(() => {\n    localStorage.setItem(\"name\", firstName);\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"mesage\", message);\n  });\n}\n\n//   if (firstName === \"\") {\n//     return <p>name is required</p>;\n//   }\n//   if (email === \"\") {\n//     return <p>email is required</p>;\n//   }\n//   if ((message = \"\")) {\n//     return <p>message is required</p>;\n//   }\n// }\n_s(ContactForm, \"fmBmfyX2rgpH1CcTy+HQSeMq3gs=\");\n_c = ContactForm;\nconst handleInputChange = e => {\n  // getting the action of keystroke out of form to trigger change?\n  const {\n    name,\n    value\n  } = e.target;\n  console.log(\"name\", firstName);\n  console.log(\"value\", e.target.value);\n  switch (name) {\n    case \"name\":\n      return setFirstName(value);\n    case \"email\":\n      return setEmail(value);\n    case \"message\":\n      return setMessage(value);\n  }\n};\n\n// Create conditional upon handleFormSubmit, if firstName, Email & Message is empty, return statement\nconst handleFormSubmit = e => {\n  e.preventDefault();\n  alert(`Hello ${firstName} your message has been sent`); // alert user msg has been sent and clear the inputs\n  setFirstName(\"\");\n  setEmail(\"\");\n  setMessage(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Name: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: firstName,\n        name: \"name\",\n        onChange: handleInputChange // how to note\n        ,\n        type: \"text\"\n        // placeholder=\"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // value={email}\n        name: \"email\",\n        onChange: handleInputChange,\n        type: \"text\"\n        // placeholder=\"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Message: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // value={message}\n        name: \"message\"\n        //   onChange={handleInputChange}\n        ,\n        type: \"text\"\n        // placeholder=\"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleFormSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","styles","card","padding","ContactForm","firstName","setFirstName","email","setEmail","message","setMessage","useEffect","localStorage","setItem","handleInputChange","e","name","value","target","console","log","handleFormSubmit","preventDefault","alert"],"sources":["/Users/conniewong/bootcamp/challenge-assignment-20/react-portfolio/src/components/pages/Contact.js"],"sourcesContent":["import React, { useState } from \"react\";\n// import './style.css';\n\nconst styles = {\n  card: {\n    padding: 20,\n  },\n};\n\nfunction ContactForm() {\n  const [firstName, setFirstName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // // when the state changes run this callback\n  // useEffect() => {\n\n  useEffect(() => {\n    localStorage.setItem(\"name\", firstName);\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"mesage\", message);\n  });\n}\n\n//   if (firstName === \"\") {\n//     return <p>name is required</p>;\n//   }\n//   if (email === \"\") {\n//     return <p>email is required</p>;\n//   }\n//   if ((message = \"\")) {\n//     return <p>message is required</p>;\n//   }\n// }\n\nconst handleInputChange = (e) => {\n  // getting the action of keystroke out of form to trigger change?\n  const { name, value } = e.target;\n  console.log(\"name\", firstName);\n  console.log(\"value\", e.target.value);\n\n  switch (name) {\n    case \"name\":\n      return setFirstName(value);\n    case \"email\":\n      return setEmail(value);\n    case \"message\":\n      return setMessage(value);\n  }\n};\n\n// Create conditional upon handleFormSubmit, if firstName, Email & Message is empty, return statement\nconst handleFormSubmit = (e) => {\n  e.preventDefault();\n\n  alert(`Hello ${firstName} your message has been sent`); // alert user msg has been sent and clear the inputs\n  setFirstName(\"\");\n  setEmail(\"\");\n  setMessage(\"\");\n\n  return (\n    <div style={styles.card}>\n      <h2>Contact</h2>\n      <p>Name: </p>\n      <form className=\"form\">\n        <input\n          value={firstName}\n          name=\"name\"\n          onChange={handleInputChange} // how to note\n          type=\"text\"\n          // placeholder=\"Name\"\n        />\n        <p>Email: </p>\n        <input\n          // value={email}\n          name=\"email\"\n          onChange={handleInputChange}\n          type=\"text\"\n          // placeholder=\"email\"\n        />\n        <p>Message: </p>\n        <input\n          // value={message}\n          name=\"message\"\n          //   onChange={handleInputChange}\n          type=\"text\"\n          // placeholder=\"Message\"\n        />\n\n        <div></div>\n        <button type=\"button\" onClick={handleFormSubmit}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}