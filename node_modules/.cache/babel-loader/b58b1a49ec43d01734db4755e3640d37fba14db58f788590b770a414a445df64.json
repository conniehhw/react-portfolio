{"ast":null,"code":"var _jsxFileName = \"/Users/conniewong/bootcamp/challenge-assignment-20/react-portfolio/src/App.js\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ProjectsComponent from \"./components/Project\";\n// second option: import { ProjectsComponent, Header } from './Projects';\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Nav from \"./components/Nav\";\n\n//convention to use a CAPITAL to denote\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  //A functional Component (React) --> returning JSX (using html syntax) //every function we create IS a component\n  //can also include other functions as needed here such as js expressions\n\n  // const name = \"Connie Wong\"; // how to leverage jSccript expressions? how to leverage 'name' into JSX return below?\n  // // for example line 20 where tx is Connie- to render JS into JSX, syntax notation is { }\n  // // see Math js example lie 23\n  // const hasCat = true; // using js tiernary operators\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectsComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectsComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectsComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectsComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectsComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectsComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"App-link\",\n      href: \"https://reactjs.org\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n//lines 8 - 25 is a top level div/p/section/a, it cannot use siblings, can only have 1 parent element\n//line 18 - ProjectsComponent is injected - from Projects.js\n//line 18 - 20 components are re-usable, bit-size, logic\n\n// //      <header className=\"App-header\">\n// <img src={logo} className=\"App-logo\" alt=\"logo\" />\n// </header>\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ProjectsComponent","Header","Footer","Nav","App"],"sources":["/Users/conniewong/bootcamp/challenge-assignment-20/react-portfolio/src/App.js"],"sourcesContent":["// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ProjectsComponent from \"./components/Project\";\n// second option: import { ProjectsComponent, Header } from './Projects';\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Nav from \"./components/Nav\";\n\n//convention to use a CAPITAL to denote\nfunction App() {\n  //A functional Component (React) --> returning JSX (using html syntax) //every function we create IS a component\n  //can also include other functions as needed here such as js expressions\n\n  // const name = \"Connie Wong\"; // how to leverage jSccript expressions? how to leverage 'name' into JSX return below?\n  // // for example line 20 where tx is Connie- to render JS into JSX, syntax notation is { }\n  // // see Math js example lie 23\n  // const hasCat = true; // using js tiernary operators\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Header />\n      <ProjectsComponent />\n      <ProjectsComponent />\n      <ProjectsComponent />\n      <ProjectsComponent />\n      <ProjectsComponent />\n      <ProjectsComponent />\n      <a\n        className=\"App-link\"\n        href=\"https://reactjs.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Welcome\n      </a>\n      <Footer />\n    </div>\n  );\n}\n//lines 8 - 25 is a top level div/p/section/a, it cannot use siblings, can only have 1 parent element\n//line 18 - ProjectsComponent is injected - from Projects.js\n//line 18 - 20 components are re-usable, bit-size, logic\n\n// //      <header className=\"App-header\">\n// <img src={logo} className=\"App-logo\" alt=\"logo\" />\n// </header>\n\nexport default App;\n"],"mappings":";AAAA;AACA,OAAO,WAAW;AAClB,OAAOA,iBAAiB,MAAM,sBAAsB;AACpD;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,GAAG,MAAM,kBAAkB;;AAElC;AAAA;AACA,SAASC,GAAG,GAAG;EACb;EACA;;EAEA;EACA;EACA;EACA;EACA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA,QAAG,eACP,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV,QAAC,iBAAiB;MAAA;MAAA;MAAA;IAAA,QAAG,eACrB,QAAC,iBAAiB;MAAA;MAAA;MAAA;IAAA,QAAG,eACrB,QAAC,iBAAiB;MAAA;MAAA;MAAA;IAAA,QAAG,eACrB,QAAC,iBAAiB;MAAA;MAAA;MAAA;IAAA,QAAG,eACrB,QAAC,iBAAiB;MAAA;MAAA;MAAA;IAAA,QAAG,eACrB,QAAC,iBAAiB;MAAA;MAAA;MAAA;IAAA,QAAG,eACrB;MACE,SAAS,EAAC,UAAU;MACpB,IAAI,EAAC,qBAAqB;MAC1B,MAAM,EAAC,QAAQ;MACf,GAAG,EAAC,qBAAqB;MAAA,UAC1B;IAED;MAAA;MAAA;MAAA;IAAA,QAAI,eACJ,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA,KApCSA,GAAG;AAsCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}