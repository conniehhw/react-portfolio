{"ast":null,"code":"var _jsxFileName = \"/Users/conniewong/bootcamp/challenge-assignment-20/react-portfolio/src/components/pages/Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  card: {\n    padding: 20\n  }\n};\nfunction ContactForm() {\n  _s();\n  const [firstName, setFirstName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // // when the state changes run this callback\n  // useEffect() => {\n\n  //   useEffect(() => {\n  //     localStorage.setItem(\"name\", firstName);\n  //     localStorage.setItem(\"email\", email);\n  //     localStorage.setItem(\"mesage\", message);\n  //   });\n  // }\n\n  //   if (firstName === \"\") {\n  //     return <p>name is required</p>;\n  //   }\n  //   if (email === \"\") {\n  //     return <p>email is required</p>;\n  //   }\n  //   if ((message = \"\")) {\n  //     return <p>message is required</p>;\n  //   }\n  // }\n\n  const handleInputChange = e => {\n    // getting the action of keystroke out of form to trigger change?\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(\"name\", firstName);\n    console.log(\"value\", e.target.value);\n    switch (name) {\n      case \"name\":\n        return setFirstName(value);\n      case \"email\":\n        return setEmail(value);\n      case \"message\":\n        return setMessage(value);\n    }\n  };\n\n  // Create conditional upon handleFormSubmit, if firstName, Email & Message is empty, return statement\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    alert(`Hello ${firstName} your message has been sent`); // alert user msg has been sent and clear the inputs\n    setFirstName(\"\");\n    setEmail(\"\");\n    setMessage(\"\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: firstName,\n          name: \"name\",\n          onChange: handleInputChange // how to note\n          ,\n          type: \"text\"\n          // placeholder=\"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          // value={email}\n          name: \"email\",\n          onChange: handleInputChange,\n          type: \"text\"\n          // placeholder=\"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Message: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          // value={message}\n          name: \"message\"\n          //   onChange={handleInputChange}\n          ,\n          type: \"text\"\n          // placeholder=\"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleFormSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  };\n}\n_s(ContactForm, \"Du6qKV2DSKlxFAoNDbDw+Tx5iYw=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","styles","card","padding","ContactForm","firstName","setFirstName","email","setEmail","message","setMessage","handleInputChange","e","name","value","target","console","log","handleFormSubmit","preventDefault","alert"],"sources":["/Users/conniewong/bootcamp/challenge-assignment-20/react-portfolio/src/components/pages/Contact.js"],"sourcesContent":["import React, { useState } from \"react\";\n// import './style.css';\n\nconst styles = {\n  card: {\n    padding: 20,\n  },\n};\n\nfunction ContactForm() {\n  const [firstName, setFirstName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // // when the state changes run this callback\n  // useEffect() => {\n\n  //   useEffect(() => {\n  //     localStorage.setItem(\"name\", firstName);\n  //     localStorage.setItem(\"email\", email);\n  //     localStorage.setItem(\"mesage\", message);\n  //   });\n  // }\n\n  //   if (firstName === \"\") {\n  //     return <p>name is required</p>;\n  //   }\n  //   if (email === \"\") {\n  //     return <p>email is required</p>;\n  //   }\n  //   if ((message = \"\")) {\n  //     return <p>message is required</p>;\n  //   }\n  // }\n\n  const handleInputChange = (e) => {\n    // getting the action of keystroke out of form to trigger change?\n    const { name, value } = e.target;\n    console.log(\"name\", firstName);\n    console.log(\"value\", e.target.value);\n\n    switch (name) {\n      case \"name\":\n        return setFirstName(value);\n      case \"email\":\n        return setEmail(value);\n      case \"message\":\n        return setMessage(value);\n    }\n  };\n\n  // Create conditional upon handleFormSubmit, if firstName, Email & Message is empty, return statement\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    alert(`Hello ${firstName} your message has been sent`); // alert user msg has been sent and clear the inputs\n    setFirstName(\"\");\n    setEmail(\"\");\n    setMessage(\"\");\n\n    return (\n      <div style={styles.card}>\n        <h2>Contact</h2>\n        <p>Name: </p>\n        <form className=\"form\">\n          <input\n            value={firstName}\n            name=\"name\"\n            onChange={handleInputChange} // how to note\n            type=\"text\"\n            // placeholder=\"Name\"\n          />\n          <p>Email: </p>\n          <input\n            // value={email}\n            name=\"email\"\n            onChange={handleInputChange}\n            type=\"text\"\n            // placeholder=\"email\"\n          />\n          <p>Message: </p>\n          <input\n            // value={message}\n            name=\"message\"\n            //   onChange={handleInputChange}\n            type=\"text\"\n            // placeholder=\"Message\"\n          />\n\n          <div></div>\n          <button type=\"button\" onClick={handleFormSubmit}>\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  };\n}\n\nexport default ContactForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AAAA;AAEA,MAAMC,MAAM,GAAG;EACbC,IAAI,EAAE;IACJC,OAAO,EAAE;EACX;AACF,CAAC;AAED,SAASC,WAAW,GAAG;EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMW,iBAAiB,GAAIC,CAAC,IAAK;IAC/B;IACA,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEZ,SAAS,CAAC;IAC9BW,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEL,CAAC,CAACG,MAAM,CAACD,KAAK,CAAC;IAEpC,QAAQD,IAAI;MACV,KAAK,MAAM;QACT,OAAOP,YAAY,CAACQ,KAAK,CAAC;MAC5B,KAAK,OAAO;QACV,OAAON,QAAQ,CAACM,KAAK,CAAC;MACxB,KAAK,SAAS;QACZ,OAAOJ,UAAU,CAACI,KAAK,CAAC;IAAC;EAE/B,CAAC;;EAED;EACA,MAAMI,gBAAgB,GAAIN,CAAC,IAAK;IAC9BA,CAAC,CAACO,cAAc,EAAE;IAElBC,KAAK,CAAE,SAAQf,SAAU,6BAA4B,CAAC,CAAC,CAAC;IACxDC,YAAY,CAAC,EAAE,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IAEd,oBACE;MAAK,KAAK,EAAET,MAAM,CAACC,IAAK;MAAA,wBACtB;QAAA,UAAI;MAAO;QAAA;QAAA;QAAA;MAAA,QAAK,eAChB;QAAA,UAAG;MAAM;QAAA;QAAA;QAAA;MAAA,QAAI,eACb;QAAM,SAAS,EAAC,MAAM;QAAA,wBACpB;UACE,KAAK,EAAEG,SAAU;UACjB,IAAI,EAAC,MAAM;UACX,QAAQ,EAAEM,iBAAkB,CAAC;UAAA;UAC7B,IAAI,EAAC;UACL;QAAA;UAAA;UAAA;UAAA;QAAA,QACA,eACF;UAAA,UAAG;QAAO;UAAA;UAAA;UAAA;QAAA,QAAI,eACd;UACE;UACA,IAAI,EAAC,OAAO;UACZ,QAAQ,EAAEA,iBAAkB;UAC5B,IAAI,EAAC;UACL;QAAA;UAAA;UAAA;UAAA;QAAA,QACA,eACF;UAAA,UAAG;QAAS;UAAA;UAAA;UAAA;QAAA,QAAI,eAChB;UACE;UACA,IAAI,EAAC;UACL;UAAA;UACA,IAAI,EAAC;UACL;QAAA;UAAA;UAAA;UAAA;QAAA,QACA,eAEF;UAAA;UAAA;UAAA;QAAA,QAAW,eACX;UAAQ,IAAI,EAAC,QAAQ;UAAC,OAAO,EAAEO,gBAAiB;UAAA,UAAC;QAEjD;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA,QACH;EAEV,CAAC;AACH;AAAC,GAxFQd,WAAW;AAAA,KAAXA,WAAW;AA0FpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}